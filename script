local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
 
local Window = Rayfield:CreateWindow({
   Name = "üå¥ Island Tribes UI üå¥",
   LoadingTitle = "Island Tribes UI",
   LoadingSubtitle = "By, TheGoldTop",
   ConfigurationSaving = {
      Enabled = false,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "island Tribes UI"
   },
   Discord = {
      Enabled = false,
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },
   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Island Tribes UI | Key",
      Subtitle = "Island Tribes UI | Key",
      Note = "",
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Gamergoeswild"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("GAMERGOESWILD","gamergoeswild")
   }
})

 -- NEURTAL SETTINGS
local MainTab = Window:CreateTab("üè† Neutral Settings", nil) -- Title, Image
local MainSection = MainTab:CreateSection("Neutral Settings")
 
Rayfield:Notify({
   Title = "Execution Successfully Loaded!",
   Content = "Island Tribes UI",
   Duration = 5,
   Image = nil,
   Actions = { -- Notification Buttons
      Ignore = {
         Name = "Okay!",
         Callback = function()
         print("Okay!")
      end
   },
},
})
 
local Button = MainTab:CreateButton({
   Name = "Toggle Infinte Jump",
   Callback = function()
       --Toggles the infinite jump between on or off on every script run
_G.infinjump = not _G.infinjump
 
if _G.infinJumpStarted == nil then
	--Ensures this only runs once to save resources
	_G.infinJumpStarted = true
 
	--Notifies readiness
	game.StarterGui:SetCore("SendNotification", {Title="Youtube Hub"; Text="Infinite Jump Activated!"; Duration=5;})
 
	--The actual infinite jump
	local plr = game:GetService('Players').LocalPlayer
	local m = plr:GetMouse()
	m.KeyDown:connect(function(k)
		if _G.infinjump then
			if k:byte() == 32 then
			humanoid = game:GetService'Players'.LocalPlayer.Character:FindFirstChildOfClass('Humanoid')
			humanoid:ChangeState('Jumping')
			wait()
			humanoid:ChangeState('Seated')
			end
		end
	end)
end
   end,
})

local Button = MainTab:CreateButton({
   Name = "Candy Speed",
   Callback = function()
      game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = (21)
   end,
})

local Button = MainTab:CreateButton({
   Name = "Normal Speed",
   Callback = function()
      game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = (18)
   end,
})

local Button = MainTab:CreateButton({
   Name = "Slightly Faster Than Candy Speed",
   Callback = function()
      game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = (22.5)
   end,
})

local Button = MainTab:CreateButton({
   Name = "Destroy UI",
   Callback = function()
      Rayfield:Destroy()
   end,
})

local Button = MainTab:CreateButton({
   Name = "Bypass AntiCheat",
   Callback = function()
   -- The function that takes place when the button is pressed
   end,
})

--End of Neutral Settings


--DUPE SETTINGS
local DupeTab = Window:CreateTab("Dupe Settings", nil) -- Title, Image
local Section = DupeTab:CreateSection("Dupe Settings")
local Button = DupeTab:CreateButton({
   Name = "Dupe",
   Callback = function()
      print('DUPE ACTIVATED!')
       getgenv().olddata = game:GetService("ReplicatedStorage").References.Comm.Events.SetSettings
    game:GetService("ReplicatedStorage").References.Comm.Events.SetSettings:FireServer(getgenv().olddata)
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Highlight = Instance.new("Highlight")
Highlight.Name = "Highlight"
function ApplyToCurrentPlayers()
   for i,player in pairs(Players:GetChildren()) do
      repeat wait() until player.Character
      if not player.Character:FindFirstChild("HumanoidRootPart"):FindFirstChild("Highlight") then
         local HighlightClone = Highlight:Clone()
         HighlightClone.Adornee = player.Character
         HighlightClone.Parent = player.Character:FindFirstChild("HumanoidRootPart")
         HighlightClone.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
         HighlightClone.Name = "Highlight"
      end
   end
end
RunService.Heartbeat:Connect(function()
   ApplyToCurrentPlayers()
end)
   end,
})

local Button = DupeTab:CreateButton({
   Name = "Put soul in wood chest",
   Callback = function()
    local chest = game:GetService("Workspace").Replicators.NonPassive["Wood Storage Chest"]
    local putIn = true
    local itemIDs = {204, 202, 201, 203, 218, 216} -- IDs for Max Soul
    local Event = game:GetService("ReplicatedStorage").References.Comm.Events.UpdateStorageChest

    for _, itemID in ipairs(itemIDs) do
        Event:FireServer(chest, putIn, itemID)
    end
   end,
})

local Button = DupeTab:CreateButton({
   Name = "Infinte Yield",
   Callback = function()

   end,
})

local Button = DupeTab:CreateButton({
   Name = "put treasure packs in Wood chest",
   Callback = function()
      print('Duped treasure packs!')
           local chest = game:GetService("Workspace").Replicators.NonPassive["Wood Storage Chest"]
    local putIn = true
    local itemIDs = {382, 382, 382, 382, 382, 382} -- IDs for chest 
    local Event = game:GetService("ReplicatedStorage").References.Comm.Events.UpdateStorageChest

    for _, itemID in ipairs(itemIDs) do
        Event:FireServer(chest, putIn, itemID)
    end
   end,
})

local Button = DupeTab:CreateButton({
   Name = "ServerHop",
   Callback = function()
      local TeleportService = game:GetService("TeleportService")
      local Players = game:GetService("Players")
      local LocalPlayer = Players.LocalPlayer
       
      local Rejoin = coroutine.create(function()
          local Success, ErrowrMessage = pcall(function()
              TeleportService:Teleport(game.PlaceId, LocalPlayer)
          end)
       
          if ErrorMessage and not Success then
              warn(ErrorMessage)
          end
      end)
       
      coroutine.resume(Rejoin)
   end,
})
--End of Dupe Settings

--PVP Settings

local PvPTab = Window:CreateTab("PVP Settings", nil) -- Title, Image
local Section = PvPTab:CreateSection("PVP Settings")
local Button = PvPTab:CreateButton({
   Name = "Expand Hitboxes",
   Callback = function()
--Change 10 to desired hitbox

_G.HeadSize = 10
_G.Disabled = true

game:GetService('RunService').RenderStepped:connect(function()
if _G.Disabled then
for i,v in next, game:GetService('Players'):GetPlayers() do
if v.Name ~= game:GetService('Players').LocalPlayer.Name then
pcall(function()
v.Character.HumanoidRootPart.Size = Vector3.new(_G.HeadSize,_G.HeadSize,_G.HeadSize)
v.Character.HumanoidRootPart.Transparency = 1
v.Character.HumanoidRootPart.BrickColor = BrickColor.new("Really white")
v.Character.HumanoidRootPart.Material = "Neon"
v.Character.HumanoidRootPart.CanCollide = false
end)
end
end
end
end)
   end,
})

local Button = PvPTab:CreateButton({
   Name = "Kill Aura",
   Callback = function()
      local Library = loadstring(game:HttpGet("https://pastebin.com/raw/vff1bQ9F"))()
      local Window = Library.CreateLib("Killaura", "GrapeTheme")
      
      
      local Tab1 = Window:NewTab("Killaura")
      local Tab1Section = Tab1:NewSection("Settings")
      
      
      Tab1Section:NewToggle("KillAura", "?", function(state)
          if state then
              local player = game:GetService("Players")
              local lplr = player.LocalPlayer
              local cam = workspace.CurrentCamera
              local KnitClient = debug.getupvalue(require(lplr.PlayerScripts.TS.knit).setup, 6)
              local SwordCont = KnitClient.Controllers.SwordController
              
              local aura = false
              local DistVal = {["Value"] = 25}
              
              local connection
              
              function Aura()
                  for i,v in pairs(game.Players:GetChildren()) do
                      if v.Character and v.Name ~= game.Players.LocalPlayer.Name and v.Character:FindFirstChild("HumanoidRootPart") then
                          local mag = (v.Character.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                          if mag <= DistVal["Value"] and v.Team ~= game.Players.LocalPlayer.Team and v.Character:FindFirstChild("Humanoid") then
                              if v.Character.Humanoid.Health > 0 then
                                  aura = true
                                  SwordCont:swingSwordAtMouse()
                              end
                          end
                      end
                  end
              end
              
              connection = game:GetService("RunService").Stepped:connect(function()
                  Aura()
              end)
          else
              if connection then
                  connection:Disconnect()
              end
          end
      end)
      
      
      Tab1Section:NewButton("Reach", "Extend your attack range", function()  
                        CombatConstant.RAYCAST_SWORD_CHARACTER_DISTANCE = 40
        end)
   end,
})

--End of PVP Settings
